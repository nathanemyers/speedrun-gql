type Player {
  id: String!
  name: String
  runs: [Run]
}

type Game {
  id: String!
  name: String
  categories: [Category]
  runs: [Run]
}

type Category {
  id: String!
  name: String
  games: [Game]
}

type Run {
  id: String!
  game: Game
  player: Player
  time: Int!
}

type Query {
  players: [Player]
  games: [Game]
  categories: [Category]

  player(id: String!): Player
  game(id: String!): Game
  category(id: String!): Category
}

type AddCategoryToGameOutput {
  game: Game
  category: Category
}

type Mutation {
  createPlayer(name: String!): Player
  createGame(name: String!): Game
  createCategory(name: String!): Category
  createRun(playerId: String!, gameId: String!, time: Int!): Run
  addCategoryToGame(gameId: String!, categoryId: String!): AddCategoryToGameOutput
}

schema {
  query: Query
  mutation: Mutation
}
